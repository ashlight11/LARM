<launch>

    <!-- Launch File to use for IRL Demo with a Turtlebot Base : 
        Autonomous Nav with obstacle avoidance and orientation according to room available -->

    <arg name="simulation" default="false" />
    <arg name="laser_topic" default="/scan"/>
    <arg name="rviz" default="true"/>

    <param name="simulation" value="$(arg simulation)" type="bool" /> 
    <param name="rviz" value="$(arg rviz)" unless="$(arg rviz)" /> <!-- This param won't be set when "unless" condition is met -->

    <!-- Place laser data in Base Footprint-->
    <node pkg="tf" type="static_transform_publisher" name="laser_in_base_footprint" args="0.0 0.1 0.1 0.0 0.0 0.0 /base_link /laser 100"/>

    <!-- Setup the turtlebot -->
    <include file="$(find turtlebot_bringup)/launch/minimal.launch"/>

    <!-- Launch RealSense Camera, very important to align depth for position estimation-->
    <include file="$(find realsense2_camera)/launch/rs_camera.launch" >
        <arg name="align_depth" value="true" />
    </include>

    <!-- Map the environment -->
    <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping" args="scan:=$(arg laser_topic)" />

    <!-- Laser -->
    <node pkg="urg_node" type="urg_node" name="laser"/>

    <!-- Image Processing script -->
    <node pkg="grp-poire" type="bottle_detection.py" name="bottle_detector"/>

    <!-- Marker Publishing script -->
    <node pkg="grp-poire" type="marker_publisher.py" name="marker_publisher" output="screen" /> 

    <!-- Autonomous Navigation script -->
    <node pkg="grp-poire" type="mover_and_laser_v2.py" name="autonomous_nav" output="screen"/>

    <!-- Launch RVIZ only if the parameter is set to true-->
    <group if="$(arg rviz)">
        <node pkg="rviz" type="rviz" name="rviz" args="-d $(find grp-poire)/rviz/config_challenge3_IRL.rviz" />
    </group>

    
</launch>
